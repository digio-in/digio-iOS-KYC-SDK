// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name DigiokycSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CoreLocation
@_exported import DigiokycSDK
import Foundation
import Swift
import SystemConfiguration
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
public protocol DigioApiResponseListener {
  func onZipFileDownloadSuccess(data: Foundation.Data?)
  func onOTPVerify(responseData: Swift.String, statusCode: Swift.Int)
  func onResponseError(errorMessage: Swift.String, statusCode: Swift.Int)
  func onRequestDetailerSuccess(response: Foundation.NSDictionary?)
}
public protocol DigioResponseDelegate {
  func onDigioStatelessResponseSuccess(response: [DigiokycSDK.DigioTaskResponse])
  func onDigioStatelessResponseFailure(response: [DigiokycSDK.DigioTaskResponse])
  func onDigioEventTracker(event: Swift.String)
}
public protocol DigioKYCDataDelegate {
  func clickedFinish(base64: Swift.String, sourceType: Swift.String, shareCode: Swift.String, fileName: Swift.String)
  func cancelledByUser()
  func onErrorRecived(statusCode: Swift.Int, errorMessage: Swift.String)
}
public class DigioTheme {
  public init(fontFamily: Swift.String!, fontUrl: Swift.String!, fontFormat: Swift.String!)
  @objc deinit
}
public enum DigioTaskType : Swift.String {
  case OFFLINE_KYC
  case E_AADHAAR
  case ID_ANALYSIS
  case SELFIE
  case QRCODE_AADHAR
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public protocol DigioKycResponseDelegate {
  func onDigioKycResponseSuccess(successResponse: Swift.String)
  func onDigioKycResponseFailure(failureResponse: Swift.String)
  func onGateWayEvent(event: Swift.String)
}
public class DigioKycBuilder {
  public init()
  public func setLogo(logo: Swift.String?) -> DigiokycSDK.DigioKycBuilder
  public func setEnvironment(environment: DigiokycSDK.DigioEnvironment) -> DigiokycSDK.DigioKycBuilder
  public func setDocumentId(documentId: Swift.String) -> DigiokycSDK.DigioKycBuilder
  public func setIdentifier(identifier: Swift.String) -> DigiokycSDK.DigioKycBuilder
  public func setTokenId(tokenId: Swift.String?) -> DigiokycSDK.DigioKycBuilder
  public func withController(viewController: UIKit.UIViewController) -> DigiokycSDK.DigioKycBuilder
  public func setKycResponseDelegate(delegate: DigiokycSDK.DigioKycResponseDelegate)
  public func setStatelessResponseDelegate(delegate: DigiokycSDK.DigioResponseDelegate)
  public func setAdditionalParams(additionalParams: [Swift.String : Swift.String]) -> DigiokycSDK.DigioKycBuilder
  public func setDigioKycScreen(screen: DigiokycSDK.DigioKYCFlow) -> DigiokycSDK.DigioKycBuilder
  public func setPrimaryColor(hexColor: Swift.String) -> DigiokycSDK.DigioKycBuilder
  public func setFontFormat(fontFormat: Swift.String) -> DigiokycSDK.DigioKycBuilder
  public func setFontFamily(fontFamily: Swift.String) -> DigiokycSDK.DigioKycBuilder
  public func setFontUrl(fontUrl: Swift.String) -> DigiokycSDK.DigioKycBuilder
  public func build() throws
  public func addTaskList(taskList: Swift.Array<DigiokycSDK.DigioTaskRequest>) -> DigiokycSDK.DigioKycBuilder
  public func setReferenceIdUninqueRequestId(referenceId: Swift.String?, uniqueRequestId: Swift.String?) -> DigiokycSDK.DigioKycBuilder
  public func build(clientId: Swift.String, clientSecretKey: Swift.String) throws
  @objc deinit
}
public enum DigioEnvironment : Swift.String {
  case PRODUCTION
  case SANDBOX
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public class DigioTaskResponse {
  public var task: DigiokycSDK.DigioTaskRequest?
  public var response: Foundation.NSMutableDictionary!
  public var success: Swift.Bool
  public init()
  @objc deinit
}
public class DigioTaskRequest {
  public init()
  public var taskType: DigiokycSDK.DigioTaskType?
  @objc deinit
}
public protocol DigioKycDelegate {
  func clickedAgree(aadhaarNumebr: Swift.String, captcha: Swift.String)
  func cancelClicked()
  func onErrorResponse(statusCode: Swift.Int, errorMessage: Swift.String)
  func zipFileDownloaded(base64: Swift.String, sourceType: Swift.String, shareCode: Swift.String, fileName: Swift.String)
}
public enum DigioKYCFlow : Swift.String {
  case OLD_UIDAI
  case NEW_UIDAI
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class NetworkReachability {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class DigioEventConstants {
  public static let CANCELLED_BY_USER: Swift.String
  public static let OFFLINE_KYC: Swift.String
  public static let SESSION_START: Swift.String
  public static let AADHAAR_SCREEN: Swift.String
  public static let AADHAAR_NUMBER_ENTERED: Swift.String
  public static let CAPTCHA_ENTERED: Swift.String
  public static let UIDAI_OTP_GENERATED_CLICKED: Swift.String
  public static let UIDAI_RESEND_OTP_CLICKED: Swift.String
  public static let OTP_SCREEN: Swift.String
  public static let OTP_ENTERED: Swift.String
  public static let FINISH_EKYC: Swift.String
  public static let OFFLINE_KYC_SUCCESS: Swift.String
  public static let SHARE_CODE_SCREEN: Swift.String
  public static let INVALID_SESSION_UIDAI: Swift.String
  public static let UIDAI_LOADING_ERROR: Swift.String
  public static let ACTION_UIDAI_UPSTREAM_CONNECT: Swift.String
  public static let AADHAAR_FETCHING_TIME_OUT: Swift.String
  public static let AGREE_PROCEED: Swift.String
  public static let ACTION_UIDAI_TEMPORARY_ERROR: Swift.String
  public static let UIDAI_SERVICE_DOWN: Swift.String
  @objc deinit
}
extension DigiokycSDK.DigioTaskType : Swift.Equatable {}
extension DigiokycSDK.DigioTaskType : Swift.Hashable {}
extension DigiokycSDK.DigioTaskType : Swift.RawRepresentable {}
extension DigiokycSDK.DigioEnvironment : Swift.Equatable {}
extension DigiokycSDK.DigioEnvironment : Swift.Hashable {}
extension DigiokycSDK.DigioEnvironment : Swift.RawRepresentable {}
extension DigiokycSDK.DigioKYCFlow : Swift.Equatable {}
extension DigiokycSDK.DigioKYCFlow : Swift.Hashable {}
extension DigiokycSDK.DigioKYCFlow : Swift.RawRepresentable {}
